import React, { useState } from 'react';
import './App.css';

function App() {
  const [activeTab, setActiveTab] = useState(0);  // Tracks which tab is active
  const [orderList, setOrderList] = useState([]);  // List of orders
  const [selectedItem, setSelectedItem] = useState('');
  const [quantity, setQuantity] = useState('');
  const [isLoggedIn, setIsLoggedIn] = useState(false);  // Manages login status
  const [username, setUsername] = useState('');  // For storing username input
  const [password, setPassword] = useState('');  // For storing password input

  const tabs = [
    { name: 'Real Estate', content: 'We take pride in offering a diverse selection of land in various prime and developing locations...' },
    { name: 'Dry Fruits & Nuts', content: 'At RiseRoots, we are dedicated to promoting a healthy and balanced lifestyle by offering the finest quality dry fruits and nuts...' },
    { name: 'Our Vision', content: 'We aim to provide opportunities for individuals to secure their future through land investment and encourage healthier lifestyles through premium quality dry fruits and nuts.' },
  ];

  const items = [
    'Cashews', 'Almonds', 'Pistachios', 'Dried Apricots', 'Walnuts & Hazelnuts'
  ];

  const handleAddItem = () => {
    if (!selectedItem || !quantity) {
      alert('Please select item and quantity');
      return;
    }

    setOrderList([...orderList, { item: selectedItem, quantity: quantity }]);
    setSelectedItem('');
    setQuantity('');
  };

  const handleSubmitOrder = async () => {
    try {
      const token = localStorage.getItem('token'); // Retrieve token from localStorage

      const response = await fetch('http://localhost:8080/api/dryfruitsorder/dfSubmit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`, // Include the token in the header
        },
        body: JSON.stringify(orderList),
      });
      const result = await response.json();
      console.log('Order submitted successfully:', result);
      alert('Order submitted successfully!');
      setOrderList([]); // Reset the order list after submission
    } catch (error) {
      console.error('Error submitting order:', error);
      alert('Error submitting order');
    }
  };

  const handleLogin = async (username, password) => {
    try {
      const response = await fetch('http://localhost:8080/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ username, password }),
        //mode: 'cors',  // Ensure CORS is enabled for the fetch
      });

      if (!response.ok) {
        const message = await response.text();
        throw new Error(`Login failed: ${message}`);
      }

      const data = await response.json();
      const token = data.token;

      // Store the JWT token in localStorage
      localStorage.setItem('token', token);

      setIsLoggedIn(true); // Update the login state
      alert('Login successful');
    } catch (error) {
      console.error('Error during login:', error);
      alert('Login failed. Please check your credentials');
    }
  };


  return (
    <div
      style={{
        backgroundImage: `url(${process.env.PUBLIC_URL + '/background.png'})`,
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        width: '100vw',
        minHeight: '100vh',
        color: 'romanticblue',
      }}
    >
      {!isLoggedIn ? (
        <div className="login-form">
          <h2>Login</h2>
          <form onSubmit={handleLogin}>
            <div>
              <label>Username:</label>
              <input
                type="text"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                placeholder="Enter your username"
                required
              />
            </div>
            <div>
              <label>Password:</label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="Enter your password"
                required
              />
            </div>
            <button type="submit">Login</button>
          </form>
        </div>
      ) : (
        <>
          <header
            style={{
              backgroundImage: `url(${process.env.PUBLIC_URL + '/logo.png'})`,
              backgroundSize: 'cover',
              backgroundPosition: 'center',
              height: '30vh',
              display: 'flex',
              justifyContent: 'flex-start',
              alignItems: 'center',
              paddingLeft: '8%',
              color: 'white',
              textAlign: 'left',
            }}
          >
            <div className="header-content">
              <div className="header-title">RiseRoots</div>
              <div className="header-tagline">Grounded in Excellence, Rising with Innovation</div>
            </div>
          </header>

          <main
            style={{
              maxWidth: '1250px',
              margin: '0 auto',
              padding: '20px',
              textAlign: 'left',
              border: '2px solid rgba(255, 255, 255, 0.5)',
              borderRadius: '8px',
              background: 'rgba(255, 255, 255, 0.2)',
              boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)',
              backdropFilter: 'blur(8px) brightness(120%)',
            }}
          >
            {/* Tabs */}
            <div className="tabs">
              {tabs.map((tab, index) => (
                <button
                  key={index}
                  className={activeTab === index ? 'active-tab' : ''}
                  onClick={() => setActiveTab(index)}
                >
                  {tab.name}
                </button>
              ))}
            </div>

            {/* Content */}
            <div className="tab-content">
              <h2>{tabs[activeTab].name}</h2>
              <p>{tabs[activeTab].content}</p>

              {activeTab === 1 && (  // Only show this content for "Dry Fruits & Nuts" tab
                <div className="content-container">
                  <h3>Our Dry Fruits & Nuts</h3>
                  <ul>
                    <li><strong>ü•ú Almonds:</strong> A powerhouse of protein, fiber, and healthy fats...</li>
                    <li><strong>üå∞ Cashews:</strong> These delicious, naturally creamy nuts...</li>
                    <li><strong>ü•ú Pistachios:</strong> Loaded with antioxidants...</li>
                    <li><strong>üçë Dried Apricots:</strong> A naturally sweet and fiber-packed superfood...</li>
                    <li><strong>ü•ú Walnuts & Hazelnuts:</strong> Walnuts are an excellent source of omega-3 fatty acids...</li>
                  </ul>
                </div>
              )}

              {activeTab === 1 && (  // Only show this for "Dry Fruits & Nuts" tab
                <div className="order-form">
                  <div style={{ display: 'flex', alignItems: 'center', gap: '20px' }}>
                    <div>
                      <label>Item:</label>
                      <select value={selectedItem} onChange={(e) => setSelectedItem(e.target.value)}>
                        <option value="">Select Item</option>
                        {items.map((item, index) => (
                          <option key={index} value={item}>
                            {item}
                          </option>
                        ))}
                      </select>
                    </div>
                    <div>
                      <label>Quantity (grams):</label>
                      <input
                        type="number"
                        value={quantity}
                        onChange={(e) => setQuantity(e.target.value)}
                        placeholder="Enter quantity"
                        style={{ width: '120px' }}
                      />
                    </div>
                    <button onClick={handleAddItem}>Add Item</button>
                  </div>
                </div>
              )}

              {activeTab === 1 && (  // Only show this for "Dry Fruits & Nuts" tab
                <div className="content-container">
                  <h3>Order List</h3>
                  <ul>
                    {orderList.map((order, index) => (
                      <li key={index}>
                        {order.item} - {order.quantity} grams
                      </li>
                    ))}
                  </ul>
                </div>
              )}

              {activeTab === 1 && (  // Only show the submit button for "Dry Fruits & Nuts" tab
                <button onClick={handleSubmitOrder} disabled={orderList.length === 0}>
                  Submit Order
                </button>
              )}
            </div>
          </main>
        </>
      )}
    </div>
  );
}

export default App;
