spring:
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:9092
      group-id: test-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  datasource:
    url: jdbc:postgresql://localhost:5432/riseroots
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  application:
    name: kafka-broker-service
    
server:
  port: 8082  # Avoid conflict with Kafka broker

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8762/eureka/
    registry-fetch-interval: 5000
    connect-timeout-seconds: 10
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15

logging:
  level:
    root: INFO
    com.riseroots: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/kafka-broker-service.log

kafka:
  broker:
    listeners:
      - PLAINTEXT://localhost:9091
    advertised-listeners:
      - PLAINTEXT://localhost:9092
    listener-security-protocol: PLAINTEXT
    log-dirs: "/tmp/kafka-logs"
    num-partitions: 1
    default-replication-factor: 1
    offsets-topic-replication-factor: 1
    transaction-state-log-replication-factor: 1
    transaction-state-log-min-isr: 1

  zookeeper:
    connect: localhost:2181  # Ensure Zookeeper is running
